"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
// переменные формы
var myForm = document.querySelector(".order-form");
var btnForm = document.querySelector(".order-button__form");
var modal = document.querySelector(".modal");
var modalMessage = document.querySelector(".modal__text");
var btnModalClose = document.querySelector(".modal__btn");
var body = document.querySelector(".body");

// переменные меню
var hamburger = document.querySelector(".hamburger");
var navigation = document.querySelector(".navigation");
var link = document.querySelectorAll(".navigation__link");

//переменные плеера
var btnPlayback = document.querySelector(".player__button-playback");
var btnPlay = document.querySelector(".player__playback-icon");
var content = document.querySelector(".player__content");
var playerBox = document.querySelector(".player__box");
var volume = document.querySelector(".player__sound-line");

// пременные слайдера отзыва
var slider = document.querySelector(".reviews-card");
var sliderItems = document.querySelectorAll(".reviews-card__item");
var sliderList = document.querySelector(".reviews-card__list");
var slideControls = document.querySelectorAll(".reviews-control__item");

// переменные аккордиона команды
var teamName = document.querySelectorAll(".team__name");
var teamList = document.querySelector(".team__list");
var teamInfo = document.querySelectorAll(".team__info");
var teamListMobile = document.querySelector(".team-mobile__list");

// переменные горизонтального аккордиона
var itemLinks = document.querySelectorAll(".menu__link");

// РАБОТА С ФОРМОЙ
btnForm.addEventListener("click", function (e) {
  e.preventDefault();
  if (validateForm(myForm)) {
    var data = {
      name: myForm.elements.name.value,
      phone: myForm.elements.phone.value,
      comment: myForm.elements.comment.value,
      to: myForm.elements.to.value
    };
    var xhr = new XMLHttpRequest();
    xhr.responseType = "json";
    xhr.open("POST", "https://webdev-api.loftschool.com/sendmail");
    xhr.setRequestHeader("content-type", "application/json");
    xhr.send(JSON.stringify(data));
    xhr.addEventListener("load", function () {
      if (xhr.response.status === 1) {
        modal.style.opacity = "1";
        modal.style.zIndex = "9999";
        modalMessage.textContent = xhr.response.message;
        body.style.overflow = "hidden";
      }
      if (xhr.response.status === "") {
        modalMessage.textContent = "Отправить сообщение не удалось, повторите запрос позже";
      }
    });
    btnModalClose.addEventListener("click", function () {
      modal.style.opacity = "0";
      modal.style.zIndex = "-9000";
      body.style.overflow = "visible";
    });
    window.addEventListener("keydown", function (e) {
      if (e.code == "Escape") {
        modal.style.opacity = "0";
        modal.style.zIndex = "-9000";
        body.style.overflow = "visible";
      }
    });
  }
});
function validateForm(form) {
  var valid = true;
  if (!validateField(form.elements.name)) {
    valid = false;
  }
  if (!validateField(form.elements.phone)) {
    valid = false;
  }
  if (!validateField(form.elements.comment)) {
    valid = false;
  }
  return valid;
}
function validateField(field) {
  if (!field.checkValidity()) {
    field.style.outline = "3px solid red";
    return false;
  } else {
    field.style.outline = "";
    return true;
  }
}
hamburger.addEventListener("click", function (event) {
  hamburger.classList.toggle("hamburger--active");
  navigation.classList.toggle("navigation--active");
});

// закрытие меню при нажатии на один из пунктов меню
link.forEach(function (e) {
  e.addEventListener("click", function () {
    if (hamburger.classList.contains("hamburger--active")) {
      hamburger.classList.remove("hamburger--active");
      navigation.classList.remove("navigation--active");
    }
  });
});
var myMap;
var init = function init() {
  myMap = new ymaps.Map("map", {
    center: [55.752004, 37.576133],
    zoom: 16,
    controls: []
  });
  var coords = [[55.752004, 37.576133]];
  var myCollection = new ymaps.GeoObjectCollection({}, {
    draggable: false,
    iconLayout: "default#image",
    iconImageHref: "../img/icons/marker.svg",
    iconImageSize: [58, 73],
    iconImageOffset: [-35, -52]
  });
  coords.forEach(function (coord) {
    myCollection.add(new ymaps.Placemark(coord));
  });
  myMap.geoObjects.add(myCollection);
};
ymaps.ready(init);

//ГОРИЗОНТАЛЬНЫЙ АККОРДИОН МЕНЮ

var getItemWidth = function getItemWidth(item) {
  var resultWidth = 524;
  var windowWidth = window.innerWidth;
  var itemWidth = item.offsetWidth;
  var isTablet = window.matchMedia("(max-width: 768px)").matches;
  var isMobile = window.matchMedia("(max-width: 480px)").matches;
  if (isTablet) {
    resultWidth = windowWidth - itemWidth * itemLinks.length;
  }
  if (isMobile) {
    resultWidth = windowWidth - itemWidth;
  }
  return resultWidth;
};
var setItemWidth = function setItemWidth(item, width) {
  var itemContent = item.nextElementSibling;
  itemContent.style.width = "".concat(width, "px");
};
var closeItem = function closeItem(item) {
  var itemParent = item.parentElement;
  itemParent.classList.remove("menu__item--active");
  item.classList.remove("menu__link--active");
  setItemWidth(item, 0);
};
var openItem = function openItem(item) {
  var itemParent = item.parentElement;
  itemParent.classList.add("menu__item--active");
  item.classList.add("menu__link--active");
  var width = getItemWidth(item);
  setItemWidth(item, width);
};
itemLinks.forEach(function (item) {
  item.addEventListener("click", function (e) {
    e.preventDefault();
    var target = e.target;
    var isActive = target.classList.contains("menu__link--active");
    var activeElement = document.querySelector(".menu__link--active");
    if (target.classList.contains("menu__link") && isActive) {
      if (activeElement) {
        closeItem(item);
      }
    }
    if (target.classList.contains("menu__link") && !isActive) {
      if (activeElement) {
        itemLinks.forEach(function (item) {
          closeItem(item);
        });
      }
      openItem(item);
    }
  });
});
window.addEventListener("resize", function () {
  var activeButton = document.querySelector(".menu__link--active");
  if (activeButton) {
    closeItem(activeButton);
  }
});

// let player;

// function onYouTubeIframeAPIReady() {
//   player = new YT.Player("yt-player", {
//     height: "392",
//     width: "662",
//     videoId: "6CSfkB4_m78",
//     events: {
//       onReady: initialize,
//       //   onStateChange: onPlayerStateChange,
//     },
//     playerVars: {
//       controls: 0,
//       disablekb: 1,
//       showinfo: 0,
//       rel: 0,
//       autoplay: 0,
//       modestbranding: 1,
//     },
//   });
// }

// // function onPlayerReady(event) {
// //   event.playVideo();
// // }

// // let eventInit = function () {
// //   const btn = btnPlay.firstChild;
// //   btnPlay.addEventListener("click", function (e) {
// //     e.preventDefault();

// //     // const btn = btnPlay.firstChild;

// //     if (btnPlay.hasAttribute("data-playback")) {
// //       btn.nextSibling.setAttribute("xlink:href", "img/icons/sprite.svg#pause");
// //       btnPlay.removeAttribute("data-playback");
// //       content.classList.add("player__content--active");
// //       player.playVideo();
// //     } else {
// //       btnPlay.setAttribute("data-playback", "1");
// //       btn.nextSibling.setAttribute("xlink:href", "img/icons/sprite.svg#play");
// //       content.classList.remove("player__content--active");
// //       player.pauseVideo();
// //     }
// //   });
// // };

// function editVolume() {
//   if (player.getVolume() == 0) {
//     player.setVolume("100");
//   } else {
//     player.setVolume("0");
//   }
// }

// const progress = document.querySelector(".player__time-line");

// // function initialize() {
// //   updateProgressBar();
// //   clearInterval(time_update_interval);
// //   let time_update_interval = setInterval(function () {
// //     updateProgressBar();
// //   }, 1000);
// // }

// // progress.addEventListener("click", function (e) {
// //   e.preventDefault();
// //   let newTime = player.getDuration() * (e.target.value / 100);
// //   player.seekTo(newTime);
// // });

// // volume.addEventListener("click", function (e) {
// //   e.preventDefault();
// //   const vol = player.getVolume();
// //   //   const vom = volume.setAttribute("value", vol);

// //   player.setVolume(vol);
// // });

// // console.log(volume);

// // function updateProgressBar() {
// //   const time = Math.round((player.getCurrentTime() / player.getDuration()) * 100);
// //   progress.setAttribute("value", time);
// //   progress.style.setProperty("--value", time);
// // }

// // for (let e of document.querySelectorAll('input[type="range"].slider-progress')) {
// //   e.style.setProperty("--value", e.value);
// //   e.style.setProperty("--min", e.min == "" ? "0" : e.min);
// //   e.style.setProperty("--max", e.max == "" ? "100" : e.max);
// //   e.addEventListener("input", () => e.style.setProperty("--value", e.value));
// // }

// // eventInit();
// // updateProgressBar();
// // // onPlayerReady();

// СЛАЙДЕР ОТЗЫВОВ
var sliderCount = 0;
var sliderWidth = slider.offsetWidth;
$(".reviews-control__link").on("click", function (e) {
  e.preventDefault();
});

// Переключение слайдера отзывов, если бы были кнопки
// const nextSlide = document.querySelector(".reviews-card__next");
// const prevSlide = document.querySelector(".reviews-card__prev");

// nextSlide.addEventListener("click", nextSlider);
// prevSlide.addEventListener("click", prevSlider);

// function nextSlider() {
//   sliderCount++;
//   if (sliderCount >= sliderItems.length) {
//     sliderCount = 0;
//   }
//   rollSlider();
// }

// function prevSlider() {
//   sliderCount--;
//   if (sliderCount < 0) {
//     sliderCount = sliderItems.length - 1;
//   }
//   rollSlider();
// }

function rollSlider() {
  sliderList.style.transform = "translateX(".concat(-sliderCount * sliderWidth, "px)");
}
function thisSlide(index) {
  slideControls.forEach(function (item) {
    return item.classList.remove("reviews-control__item--active");
  });
  slideControls[index].classList.add("reviews-control__item--active");
}
slideControls.forEach(function (dot, index) {
  dot.addEventListener("click", function () {
    sliderCount = index;
    rollSlider();
    thisSlide(sliderCount);
  });
});

// const sections = document.querySelectorAll("section");
var sections = $("section");
var display = document.querySelector(".maincontent");
var mobileDetect = new MobileDetect(window.navigator.userAgent);
var isMobile = mobileDetect.mobile();
var inScroll = false;
display.firstElementChild.classList.add("active");
var transition = function transition(sectonNum) {
  if (inScroll === false) {
    inScroll = true;
    var position = sectonNum * -100;
    var currentSection = sections.eq(sectonNum);
    var menuTheme = currentSection.attr("data-color-scheme");
    var sideMenu = $(".pagination__list");
    var humburgerColor = $(".hamburger");
    if (menuTheme === "black") {
      sideMenu.addClass("pagination__list-color--black");
      humburgerColor.addClass("hamburger-color--black");
    } else {
      sideMenu.removeClass("pagination__list-color--black");
      humburgerColor.removeClass("hamburger-color--black");
    }
    display.style.transform = "translateY(".concat(position, "%)");
    //   sections[sectonNum].classList.add("active");
    //   sections[sectonNum].previousSibling.classList.remove("active");
    sections.eq(sectonNum).addClass("active").siblings().removeClass("active");
    setTimeout(function () {
      inScroll = false;
      sideMenu.find(".pagination__item").eq(sectonNum).addClass("pagination__link--active").siblings().removeClass("pagination__link--active");
    }, 1300);
  }
};
var viewportScroll = function viewportScroll(direction) {
  //   sections.forEach((item) => {
  //   const activeSection = sections.classList.contains("active");
  // const nextSection = activeSection.nextSibling;
  // const prevSection = activeSection.previousSibling;
  // return activeSection;
  //   });

  //   const nextSection = activeSection.nextSibling;
  //   const prevSection = activeSection.previousSibling;
  //   console.log(nextSection);

  var activeSection = sections.filter(".active");
  var nextSection = activeSection.next();
  var prevSection = activeSection.prev();
  if (direction === "next" && nextSection.length) {
    transition(nextSection.index());
  }
  if (direction === "prev" && prevSection.length) {
    transition(prevSection.index());
  }
};
window.addEventListener("wheel", function (e) {
  var deltaY = e.deltaY;
  if (deltaY > 0) {
    viewportScroll("next");
  }
  if (deltaY < 0) {
    viewportScroll("prev");
  }
});
window.addEventListener("keydown", function (e) {
  //   if (e.code === "ArrowUp") {
  //     viewportScroll("prev");
  //   }
  //   if (e.code == "ArrowDown") {
  //     viewportScroll("next");
  //   }

  var tagName = e.target.tagName.toLowerCase();
  if (tagName !== "input" && tagName !== "textarea") {
    switch (e.code) {
      case "ArrowUp":
        viewportScroll("prev");
        break;
      case "ArrowDown":
        viewportScroll("next");
        break;
    }
  }
});
$("[data-scroll-to]").on("click", function (e) {
  e.preventDefault();
  var $this = $(e.currentTarget);
  var target = $this.attr("data-scroll-to");
  var reqSection = $("[data-section-id=".concat(target, "]"));
  transition(reqSection.index());
});
if (isMobile) {
  $(function () {
    $("body").swipe({
      swipe: function swipe(event, direction) {
        var scrollDirect = "";
        if (direction === "up") scrollDirect = "next";
        if (direction === "down") scrollDirect = "prev";
        viewportScroll(scrollDirect);
      }
    });
  });
}

// СЛАЙДЕР НА SLICK
$(".single-item").slick({
  infinite: true,
  speed: 600,
  cssEase: "linear",
  swipe: true,
  prevArrow: '<button type="button" class="slider__arrow slider__arrow--left"></button>',
  nextArrow: '<button type="button" class="slider__arrow slider__arrow--right"></button>'
});

// АККАРДИОН КОМАНДЫ
teamName.forEach(function (e) {
  e.addEventListener("click", function (e) {
    e.preventDefault();
  });
});
function accordionTeam() {
  teamList.addEventListener("click", function (e) {
    var target = e.target;
    if (target.classList.contains("team__name")) {
      var worker = target.parentNode;
      var _content = target.nextElementSibling;
      var contentHeight = _content.firstElementChild.clientHeight;
      var _iterator = _createForOfIteratorHelper(teamInfo),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var iterator = _step.value;
          if (iterator !== worker) {
            iterator.classList.remove("team__item--active");
            iterator.lastElementChild.style.height = 0;
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      if (worker.classList.contains("team__item--active")) {
        worker.classList.remove("team__item--active");
        _content.style.height = 0;
      } else {
        worker.classList.add("team__item--active");
        _content.style.height = contentHeight + "px";
      }
    }
  });
}
function accordionTeamMobile() {
  teamListMobile.addEventListener("click", function (e) {
    var target = e.target;
    if (target.classList.contains("team__name")) {
      var worker = target.parentNode;
      var _content2 = target.nextElementSibling;
      var contentHeight = _content2.firstElementChild.clientHeight;
      var _iterator2 = _createForOfIteratorHelper(teamInfo),
        _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var iterator = _step2.value;
          if (iterator !== worker) {
            iterator.classList.remove("team__item--active");
            iterator.lastElementChild.style.height = 0;
          }
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
      if (worker.classList.contains("team__item--active")) {
        worker.classList.remove("team__item--active");
        _content2.style.height = 0;
      } else {
        worker.classList.add("team__item--active");
        _content2.style.height = contentHeight + "px";
      }
    }
  });
}
accordionTeam();
accordionTeamMobile();